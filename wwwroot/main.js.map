{"version":3,"file":"main.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/_directives/has-role.directive.ts","./src/app/_forms/date-input/date-input.component.ts","./src/app/_forms/date-input/date-input.component.html","./src/app/_forms/text-input/text-input.component.ts","./src/app/_forms/text-input/text-input.component.html","./src/app/_guards/admin.guard.ts","./src/app/_guards/auth.guard.ts","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/_interceptors/error.interceptor.ts","./src/app/_interceptors/jwt.interceptor.ts","./src/app/_interceptors/loading.interceptor.ts","./src/app/_models/pagination.ts","./src/app/_models/userParams.ts","./src/app/_modules/shared.module.ts","./src/app/_resolvers/member-detailed.resolver.ts","./src/app/_services/account.service.ts","./src/app/_services/admin.service.ts","./src/app/_services/busy.service.ts","./src/app/_services/confirm.service.ts","./src/app/_services/members.service.ts","./src/app/_services/message.service.ts","./src/app/_services/paginationHelper.ts","./src/app/_services/presence.service.ts","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/admin/photo-management/photo-management.component.ts","./src/app/admin/photo-management/photo-management.component.html","./src/app/admin/user-management/user-management.component.ts","./src/app/admin/user-management/user-management.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/errors/not-found/not-found.component.ts","./src/app/errors/not-found/not-found.component.html","./src/app/errors/server-error/server-error.component.ts","./src/app/errors/server-error/server-error.component.html","./src/app/errors/test-errors/test-errors.component.ts","./src/app/errors/test-errors/test-errors.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/lists/lists.component.ts","./src/app/lists/lists.component.html","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/members/member-detail/member-detail.component.ts","./src/app/members/member-detail/member-detail.component.html","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/members/member-list/member-list.component.ts","./src/app/members/member-list/member-list.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/members/member-messages/member-messages.component.html","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/modals/confirm-dialog/confirm-dialog.component.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.html","./src/app/modals/roles-modal/roles-modal.component.ts","./src/app/modals/roles-modal/roles-modal.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { User } from '../_models/user';\nimport { AccountService } from '../_services/account.service';\n\n@Directive({\n  selector: '[appHasRole]'\n})\nexport class HasRoleDirective implements OnInit {\n  @Input() appHasRole: string[];\n  user: User;\n\n  constructor(private viewContainerRef: ViewContainerRef, \n    private templateRef: TemplateRef<any>, \n    private accountService: AccountService) {\n      this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n        this.user = user;\n      })\n     }\n\n  ngOnInit(): void {\n    // clear view if no roles\n    if (!this.user?.roles || this.user == null) {\n      this.viewContainerRef.clear();\n      return;\n    }\n\n    if (this.user?.roles.some(r  => this.appHasRole.includes(r))) {\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n    } else {\n      this.viewContainerRef.clear();\n    }\n  }\n\n}\n","import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\n\n@Component({\n  selector: 'app-date-input',\n  templateUrl: './date-input.component.html',\n  styleUrls: ['./date-input.component.css']\n})\nexport class DateInputComponent implements ControlValueAccessor {\n  @Input() label: string;\n  @Input() maxDate: Date;\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  constructor(@Self() public ngControl: NgControl) { \n    this.ngControl.valueAccessor = this;\n    this.bsConfig = {\n      containerClass: 'theme-red',\n      dateInputFormat: 'DD MMMM YYYY'\n    }\n  }\n\n  writeValue(obj: any): void {\n  }\n\n  registerOnChange(fn: any): void {\n  }\n\n  registerOnTouched(fn: any): void {\n  }\n}\n","<div class=\"mb-3\">\n    <input \n        type=\"text\"\n        [class.is-invalid]='ngControl.touched && ngControl.invalid'\n        class='form-control'\n        [formControl]='ngControl.control'\n        placeholder=\"{{label}}\"\n        bsDatepicker\n        [bsConfig]='bsConfig'\n        [maxDate]='maxDate'\n    >\n    <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">{{label}} is required</div>\n</div>\n","import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.css']\n})\nexport class TextInputComponent implements ControlValueAccessor {\n  @Input() label: string;\n  @Input() type = 'text';\n\n  constructor(@Self() public ngControl: NgControl) { \n    this.ngControl.valueAccessor = this;\n  }\n\n  writeValue(obj: any): void {\n  }\n\n  registerOnChange(fn: any): void {\n  }\n\n  registerOnTouched(fn: any): void {\n  }\n  \n}\n","<div class=\"mb-3\">\n    <input \n        [class.is-invalid]=\"ngControl.touched && ngControl.invalid\"\n        type={{type}}\n        class=\"form-control\" \n        [formControl]=\"ngControl.control\"\n        placeholder={{label}}>\n    <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">Please enter a {{label}}</div>\n    <div *ngIf=\"ngControl.control.errors?.minlength\" class=\"invalid-feedback\">\n        {{label}} must be at least {{ngControl.control.errors.minlength['requiredLength']}}\n    </div>\n    <div *ngIf=\"ngControl.control.errors?.maxlength\" class=\"invalid-feedback\">\n        {{label}} must be at most {{ngControl.control.errors.maxlength['requiredLength']}}\n    </div>\n    <div *ngIf=\"ngControl.control.errors?.isMatching\" class=\"invalid-feedback\">\n        Passwords do not match\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private accountService: AccountService, private toastr: ToastrService) { }\n\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(\n      map(user => {\n        if (user.roles.includes('Admin') || user.roles.includes('Moderator')) {\n          return true;\n        }\n        this.toastr.error('You cannot enter this area');\n      })\n    )\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AccountService } from '../_services/account.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private accountService: AccountService, private toastr: ToastrService) {}\n\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(\n      map(user => {\n        if (user) return true;\n        this.toastr.error('You shall not pass!')\n      })\n    )\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\nimport { ConfirmService } from '../_services/confirm.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\n\n  constructor(private confirmService: ConfirmService) {}\n\n  canDeactivate(component: MemberEditComponent): Observable<boolean> | boolean {\n    if (component.editForm.dirty) {\n      return this.confirmService.confirm()\n    }\n    return true;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router, private toastr: ToastrService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    return next.handle(request).pipe(\n      catchError(error => {\n        if (error) {\n          switch (error.status) {\n            case 400:\n              if (error.error.errors) {\n                const modalStateErrors = [];\n                for (const key in error.error.errors) {\n                  if (error.error.errors[key]) {\n                    modalStateErrors.push(error.error.errors[key])\n                  }\n                }\n                throw modalStateErrors.flat();\n              } else if (typeof(error.error) === 'object') {\n                this.toastr.error(error.statusText, error.status);\n              } else {\n                this.toastr.error(error.error, error.status);\n              }\n              break;\n            case 401:\n              this.toastr.error(error.statusText, error.status);\n              break;\n            case 404:\n              this.router.navigateByUrl('/not-found');\n              break;\n            case 500:\n              const navigationExtras: NavigationExtras = {state: {error: error.error}}\n              this.router.navigateByUrl('/server-error', navigationExtras);\n              break;\n            default:\n              this.toastr.error('Something unexpected went wrong');\n              console.log(error);\n              break;\n          }\n        }\n        return throwError(error);\n      })\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AccountService } from '../_services/account.service';\nimport { User } from '../_models/user';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(private accountService: AccountService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    let currentUser: User;\n\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => currentUser = user);\n    if (currentUser) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.token}`\n        }\n      })\n    }\n\n    return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BusyService } from '../_services/busy.service';\nimport { delay, finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n\n  constructor(private busyService: BusyService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    this.busyService.busy();\n    return next.handle(request).pipe(\n      finalize(() => {\n        this.busyService.idle();\n      })\n    )\n  }\n}\n","export interface Pagination {\n    currentPage: number;\n    itemsPerPage: number;\n    totalItems: number;\n    totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n    result: T;\n    pagination: Pagination;\n}","import { User } from './user';\n\nexport class UserParams {\n    gender: string;\n    minAge = 18;\n    maxAge = 99;\n    pageNumber = 1;\n    pageSize = 24;\n    orderBy = 'lastActive';\n\n    constructor(user: User) {\n        this.gender = user.gender === 'female' ? 'male' : 'female';\n    }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ToastrModule } from 'ngx-toastr';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport {NgxGalleryModule} from '@kolkov/ngx-gallery';\nimport {FileUploadModule} from 'ng2-file-upload';\nimport {BsDatepickerModule} from 'ngx-bootstrap/datepicker';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TimeagoModule } from 'ngx-timeago';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BsDropdownModule.forRoot(),\n    ToastrModule.forRoot({\n      positionClass: 'toast-bottom-right'\n    }),\n    TabsModule.forRoot(),\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule.forRoot(),\n    PaginationModule.forRoot(),\n    ButtonsModule.forRoot(),\n    TimeagoModule.forRoot(),\n    ModalModule.forRoot()\n  ],\n  exports: [\n    BsDropdownModule,\n    ToastrModule,\n    TabsModule,\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule,\n    PaginationModule,\n    ButtonsModule,\n    TimeagoModule,\n    ModalModule\n  ]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Member } from '../_models/member';\nimport { MembersService } from '../_services/members.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MemberDetailedResolver implements Resolve<Member> {\n\n    constructor(private memberService: MembersService) {}\n\n    resolve(route: ActivatedRouteSnapshot): Observable<Member> {\n        return this.memberService.getMember(route.paramMap.get('username'));\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { User } from '../_models/user';\nimport { ReplaySubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { PresenceService } from './presence.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n  baseUrl = environment.apiUrl;\n  private currentUserSource = new ReplaySubject<User>(1);\n  currentUser$ = this.currentUserSource.asObservable();\n\n  constructor(private http: HttpClient, private presence: PresenceService) { }\n\n  login(model: any) {\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(\n      map((response: User) => {\n        const user = response;\n        if (user) {\n          this.setCurrentUser(user);\n          this.presence.createHubConnection(user);\n        }\n      })\n    )\n  }\n\n  register(model: any) {\n    return this.http.post(this.baseUrl + 'account/register', model).pipe(\n      map((user: User) => {\n        if (user) {\n         this.setCurrentUser(user);\n         this.presence.createHubConnection(user);\n        }\n      })\n    )\n  }\n\n  setCurrentUser(user: User) {\n    user.roles = [];\n    const roles = this.getDecodedToken(user.token).role;\n    Array.isArray(roles) ? user.roles = roles : user.roles.push(roles);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.currentUserSource.next(user);\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n    this.currentUserSource.next(null);\n    this.presence.stopHubConnection();\n  }\n\n  getDecodedToken(token) {\n    return JSON.parse(atob(token.split('.')[1]));\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  getUsersWithRoles() {\n    return this.http.get<Partial<User[]>>(this.baseUrl + 'admin/users-with-roles');\n  }\n\n  updateUserRoles(username: string, roles: string[]) {\n    return this.http.post(this.baseUrl + 'admin/edit-roles/' + username + '?roles=' + roles, {});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BusyService {\n  busyRequestCount = 0;\n\n  constructor(private spinnerService: NgxSpinnerService) { }\n\n  busy() {\n    this.busyRequestCount++;\n    this.spinnerService.show(undefined, {\n      type: 'line-scale-party',\n      bdColor: 'rgba(255,255,255,0)',\n      color: '#333333'\n    });\n  }\n\n  idle() {\n    this.busyRequestCount--;\n    if (this.busyRequestCount <= 0) {\n      this.busyRequestCount = 0;\n      this.spinnerService.hide();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\nimport { ConfirmDialogComponent } from '../modals/confirm-dialog/confirm-dialog.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmService {\n  bsModelRef: BsModalRef;\n\n  constructor(private modalService: BsModalService) { }\n\n  confirm(title = 'Confirmation', \n    message = 'Are you sure you want to do this?', \n    btnOkText = 'Ok', \n    btnCancelText = 'Cancel'): Observable<boolean> {\n      const config = {\n        initialState: {\n          title, \n          message,\n          btnOkText,\n          btnCancelText\n        }\n      }\n    this.bsModelRef = this.modalService.show(ConfirmDialogComponent, config);\n    \n    return new Observable<boolean>(this.getResult());\n  }\n\n  private getResult() {\n    return (observer) => {\n      const subscription = this.bsModelRef.onHidden.subscribe(() => {\n        observer.next(this.bsModelRef.content.result);\n        observer.complete();\n      });\n\n      return {\n        unsubscribe() {\n          subscription.unsubscribe();\n        }\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Member } from '../_models/member';\nimport { of, pipe } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { PaginatedResult } from '../_models/pagination';\nimport { UserParams } from '../_models/userParams';\nimport { AccountService } from './account.service';\nimport { User } from '../_models/user';\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MembersService {\n  baseUrl = environment.apiUrl;\n  members: Member[] = [];\n  memberCache = new Map();\n  user: User;\n  userParams: UserParams;\n\n  constructor(private http: HttpClient, private accountService: AccountService) {\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n      this.user = user;\n      this.userParams = new UserParams(user);\n    })\n  }\n\n  getUserParams() {\n    return this.userParams;\n  }\n\n  setUserParams(params: UserParams) {\n    this.userParams = params;\n  }\n\n  resetUserParams() {\n    this.userParams = new UserParams(this.user);\n    return this.userParams;\n  }\n\n  getMembers(userParams: UserParams) {\n    var response = this.memberCache.get(Object.values(userParams).join('-'));\n    if (response) {\n      return of(response);\n    }\n\n    let params = getPaginationHeaders(userParams.pageNumber, userParams.pageSize);\n\n    params = params.append('minAge', userParams.minAge.toString());\n    params = params.append('maxAge', userParams.maxAge.toString());\n    params = params.append('gender', userParams.gender);\n    params = params.append('orderBy', userParams.orderBy);\n\n    return getPaginatedResult<Member[]>(this.baseUrl + 'users', params, this.http)\n      .pipe(map(response => {\n        this.memberCache.set(Object.values(userParams).join('-'), response);\n        return response;\n      }))\n  }\n\n  getMember(username: string) {\n    const member = [...this.memberCache.values()]\n      .reduce((arr, elem) => arr.concat(elem.result), [])\n      .find((member: Member) => member.username === username);\n\n    if (member) {\n      return of(member);\n    }\n    return this.http.get<Member>(this.baseUrl + 'users/' + username);\n  }\n\n  updateMember(member: Member) {\n    return this.http.put(this.baseUrl + 'users', member).pipe(\n      map(() => {\n        const index = this.members.indexOf(member);\n        this.members[index] = member;\n      })\n    )\n  }\n\n  setMainPhoto(photoId: number) {\n    return this.http.put(this.baseUrl + 'users/set-main-photo/' + photoId, {});\n  }\n\n  deletePhoto(photoId: number) {\n    return this.http.delete(this.baseUrl + 'users/delete-photo/' + photoId);\n  }\n\n  addLike(username: string) {\n    return this.http.post(this.baseUrl + 'likes/' + username, {})\n  }\n\n  getLikes(predicate: string, pageNumber, pageSize) {\n    let params = getPaginationHeaders(pageNumber, pageSize);\n    params = params.append('predicate', predicate);\n    return getPaginatedResult<Partial<Member[]>>(this.baseUrl + 'likes', params, this.http);\n  }\n\n  \n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Group } from '../_models/group';\nimport { Message } from '../_models/message';\nimport { User } from '../_models/user';\nimport { BusyService } from './busy.service';\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  baseUrl = environment.apiUrl;\n  hubUrl = environment.hubUrl;\n  private hubConnection: HubConnection;\n  private messageThreadSource = new BehaviorSubject<Message[]>([]);\n  messageThread$ = this.messageThreadSource.asObservable();\n\n  constructor(private http: HttpClient, private busyService: BusyService) { }\n\n  createHubConnection(user: User, otherUsername: string) {\n    this.busyService.busy();\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(this.hubUrl + 'message?user=' + otherUsername, {\n        accessTokenFactory: () => user.token\n      })\n      .withAutomaticReconnect()\n      .build()\n\n    this.hubConnection.start()\n      .catch(error => console.log(error))\n      .finally(() => this.busyService.idle());\n\n    this.hubConnection.on('ReceiveMessageThread', messages => {\n      this.messageThreadSource.next(messages);\n    })\n\n    this.hubConnection.on('NewMessage', message => {\n      this.messageThread$.pipe(take(1)).subscribe(messages => {\n        this.messageThreadSource.next([...messages, message])\n      })\n    })\n\n    this.hubConnection.on('UpdatedGroup', (group: Group) => {\n      if (group.connections.some(x => x.username === otherUsername)) {\n        this.messageThread$.pipe(take(1)).subscribe(messages => {\n          messages.forEach(message => {\n            if (!message.dateRead) {\n              message.dateRead = new Date(Date.now())\n            }\n          })\n          this.messageThreadSource.next([...messages]);\n        })\n      }\n    })\n  }\n\n  stopHubConnection() {\n    if (this.hubConnection) {\n      this.messageThreadSource.next([]);\n      this.hubConnection.stop();\n    }\n  }\n\n  getMessages(pageNumber, pageSize, container) {\n    let params = getPaginationHeaders(pageNumber, pageSize);\n    params = params.append('Container', container);\n    return getPaginatedResult<Message[]>(this.baseUrl + 'messages', params, this.http);\n  }\n\n  getMessageThread(username: string) {\n    return this.http.get<Message[]>(this.baseUrl + 'messages/thread/' + username);\n  }\n\n  async sendMessage(username: string, content: string) {\n    return this.hubConnection.invoke('SendMessage', {recipientUsername: username, content})\n      .catch(error => console.log(error));\n  }\n\n  deleteMessage(id: number) {\n    return this.http.delete(this.baseUrl + 'messages/' + id);\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { PaginatedResult } from '../_models/pagination';\n\nexport function getPaginatedResult<T>(url, params, http: HttpClient) {\n    const paginatedResult: PaginatedResult<T> = new PaginatedResult<T>();\n    return http.get<T>(url, { observe: 'response', params }).pipe(\n      map(response => {\n        paginatedResult.result = response.body;\n        if (response.headers.get('Pagination') !== null) {\n          paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n        }\n        return paginatedResult;\n      })\n    );\n  }\n\n  export function getPaginationHeaders(pageNumber: number, pageSize: number) {\n    let params = new HttpParams();\n\n    params = params.append('pageNumber', pageNumber.toString());\n    params = params.append('pageSize', pageSize.toString());\n\n    return params;\n  }","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { ToastrService } from 'ngx-toastr';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PresenceService {\n  hubUrl = environment.hubUrl;\n  private hubConnection: HubConnection;\n  private onlineUsersSource = new BehaviorSubject<string[]>([]);\n  onlineUsers$ = this.onlineUsersSource.asObservable();\n\n  constructor(private toastr: ToastrService, private router: Router) { }\n\n  createHubConnection(user: User) {\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(this.hubUrl + 'presence', {\n        accessTokenFactory: () => user.token\n      })\n      .withAutomaticReconnect()\n      .build()\n\n    this.hubConnection\n      .start()\n      .catch(error => console.log(error));\n\n    this.hubConnection.on('UserIsOnline', username => {\n      this.onlineUsers$.pipe(take(1)).subscribe(usernames => {\n        this.onlineUsersSource.next([...usernames, username])\n      })\n    })\n\n    this.hubConnection.on('UserIsOffline', username => {\n      this.onlineUsers$.pipe(take(1)).subscribe(usernames => {\n        this.onlineUsersSource.next([...usernames.filter(x => x !== username)])\n      })\n    })\n\n    this.hubConnection.on('GetOnlineUsers', (usernames: string[]) => {\n      this.onlineUsersSource.next(usernames);\n    })\n\n    this.hubConnection.on('NewMessageReceived', ({username, knownAs}) => {\n      this.toastr.info(knownAs + ' has sent you a new message!')\n        .onTap\n        .pipe(take(1))\n        .subscribe(() => this.router.navigateByUrl('/members/' + username + '?tab=3'));\n    })\n  }\n\n  stopHubConnection() {\n    this.hubConnection.stop().catch(error => console.log(error));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Admin Panel</h2>\n<div class=\"tab-panel\">\n    <tabset class=\"member-tabset\">\n        <tab heading='User management' *appHasRole='[\"Admin\"]'>\n            <div class=\"container\">\n                <app-user-management></app-user-management>\n            </div>\n        </tab>\n        <tab heading='Photo management' *appHasRole='[\"Admin\", \"Moderator\"]'>\n            <div class=\"container\">\n                <app-photo-management></app-photo-management>\n            </div>\n        </tab>\n    </tabset>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-photo-management',\n  templateUrl: './photo-management.component.html',\n  styleUrls: ['./photo-management.component.css']\n})\nexport class PhotoManagementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>photo-management works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { RolesModalComponent } from 'src/app/modals/roles-modal/roles-modal.component';\nimport { User } from 'src/app/_models/user';\nimport { AdminService } from 'src/app/_services/admin.service';\n\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.component.html',\n  styleUrls: ['./user-management.component.css']\n})\nexport class UserManagementComponent implements OnInit {\n  users: Partial<User[]>;\n  bsModalRef: BsModalRef;\n\n  constructor(private adminService: AdminService, private modalService: BsModalService) { }\n\n  ngOnInit(): void {\n    this.getUsersWithRoles();\n  }\n\n  getUsersWithRoles() {\n    this.adminService.getUsersWithRoles().subscribe(users => {\n      this.users = users;\n    })\n  }\n\n  openRolesModal(user: User) {\n    const config = {\n      class: 'modal-dialog-centered',\n      initialState: {\n        user,\n        roles: this.getRolesArray(user)\n      }\n    }\n    this.bsModalRef = this.modalService.show(RolesModalComponent, config);\n    this.bsModalRef.content.updateSelectedRoles.subscribe(values => {\n      const rolesToUpdate = {\n        roles: [...values.filter(el => el.checked === true).map(el => el.name)]\n      };\n      if (rolesToUpdate) {\n        this.adminService.updateUserRoles(user.username, rolesToUpdate.roles).subscribe(() => {\n          user.roles = [...rolesToUpdate.roles]\n        })\n      }\n    })\n  }\n\n  private getRolesArray(user) {\n    const roles = [];\n    const userRoles = user.roles;\n    const availableRoles: any[] = [\n      {name: 'Admin', value: 'Admin'},\n      {name: 'Moderator', value: 'Moderator'},\n      {name: 'Member', value: 'Member'}\n    ];\n\n    availableRoles.forEach(role => {\n      let isMatch = false;\n      for (const userRole of userRoles) {\n        if (role.name === userRole) {\n          isMatch = true;\n          role.checked = true;\n          roles.push(role);\n          break;\n        }\n      }\n      if (!isMatch) {\n        role.checked = false;\n        roles.push(role);\n      }\n    })\n    return roles;\n  }\n\n}\n","<div class=\"row\">\n    <table class=\"table\">\n        <thead>\n            <tr>\n                <th style=\"width: 30%;\">Username</th>\n                <th style=\"width: 40%;\">Active roles</th>\n                <th style=\"width: 30%;\"></th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let user of users\">\n                <td>{{user.username}}</td>\n                <td>{{user.roles}}</td>\n                <td><button (click)=\"openRolesModal(user)\" class=\"btn btn-info\">Edit Roles</button></td>\n            </tr>\n        </tbody>\n\n    </table>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\nimport { MemberDetailedResolver } from './_resolvers/member-detailed.resolver';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { AdminGuard } from './_guards/admin.guard';\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    canActivate: [AuthGuard],\n    children: [\n      {path: 'members', component: MemberListComponent},\n      {path: 'members/:username', component: MemberDetailComponent, resolve: {member: MemberDetailedResolver}},\n      {path: 'member/edit', component: MemberEditComponent, canDeactivate: [PreventUnsavedChangesGuard]},\n      {path: 'lists', component: ListsComponent},\n      {path: 'messages', component: MessagesComponent},\n      {path: 'admin', component: AdminPanelComponent, canActivate: [AdminGuard]},\n    ]\n  },\n  {path: 'errors', component: TestErrorsComponent},\n  {path: 'not-found', component: NotFoundComponent},\n  {path: 'server-error', component: ServerErrorComponent},\n  {path: '**', component: NotFoundComponent, pathMatch: 'full'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from './_models/user';\nimport { AccountService } from './_services/account.service';\nimport { PresenceService } from './_services/presence.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'The Dating app';\n  users: any;\n\n  constructor(private accountService: AccountService, private presence: PresenceService) {}\n\n  ngOnInit() {\n    this.setCurrentUser();\n  }\n\n  setCurrentUser() {\n    const user: User = JSON.parse(localStorage.getItem('user'));\n    if (user) {\n      this.accountService.setCurrentUser(user);\n      this.presence.createHubConnection(user);\n    }\n\n  }\n}\n","<ngx-spinner>\n    <h3>Loading...</h3>\n</ngx-spinner>\n\n<app-nav></app-nav>\n\n<div class=\"container\" style=\"margin-top: 100px\">\n    <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavComponent } from './nav/nav.component';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { SharedModule } from './_modules/shared.module';\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { LoadingInterceptor } from './_interceptors/loading.interceptor';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\nimport { DateInputComponent } from './_forms/date-input/date-input.component';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { HasRoleDirective } from './_directives/has-role.directive';\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\nimport { RolesModalComponent } from './modals/roles-modal/roles-modal.component';\nimport { ConfirmDialogComponent } from './modals/confirm-dialog/confirm-dialog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    RegisterComponent,\n    MemberListComponent,\n    MemberDetailComponent,\n    ListsComponent,\n    MessagesComponent,\n    TestErrorsComponent,\n    NotFoundComponent,\n    ServerErrorComponent,\n    MemberCardComponent,\n    MemberEditComponent,\n    PhotoEditorComponent,\n    TextInputComponent,\n    DateInputComponent,\n    MemberMessagesComponent,\n    AdminPanelComponent,\n    HasRoleDirective,\n    UserManagementComponent,\n    PhotoManagementComponent,\n    RolesModalComponent,\n    ConfirmDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    NgxSpinnerModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <h1>Not found</h1>\n    <button class=\"btn btn-info btn-lg\" routerLink='/'>Return to home page</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.css']\n})\nexport class ServerErrorComponent implements OnInit {\n  error: any;\n\n  constructor(private router: Router) {\n    const navigation = this.router.getCurrentNavigation();\n    this.error = navigation?.extras?.state?.error;\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h4>Internal server error - refreshing the page will make the error disappear!</h4>\n<ng-container *ngIf=\"error\">\n    <h5 class='text-danger'>Error: {{error.message}}</h5>\n    <p class=\"font-weight-bold\">Note: If you are seeing this then Angular is probably not to blame</p>\n    <p>What to do next?</p>\n    <ol>\n        <li>Open the chrome dev tools</li>\n        <li>Inspect the network tab</li>\n        <li>Check the failing request</li>\n        <li>Examine the request URL - make sure it is correct</li>\n        <li>Reproduce the error in Postman - if we see the same response, then the issue is not with Angular</li>\n    </ol>\n    <p>Following is the stack trace - this is where your investigation should start!</p>\n    <code class=\"mt-5\" style=\"background-color: whitesmoke;\">{{error.details}}</code>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-test-errors',\n  templateUrl: './test-errors.component.html',\n  styleUrls: ['./test-errors.component.css']\n})\nexport class TestErrorsComponent implements OnInit {\n  baseUrl = environment.apiUrl;\n  validationErrors: string[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  get404Error() {\n    this.http.get(this.baseUrl + 'buggy/not-found').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get400Error() {\n    this.http.get(this.baseUrl + 'buggy/bad-request').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get500Error() {\n    this.http.get(this.baseUrl + 'buggy/server-error').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get401Error() {\n    this.http.get(this.baseUrl + 'buggy/auth').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get400ValidationError() {\n    this.http.post(this.baseUrl + 'account/register', {}).subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n      this.validationErrors = error;\n    })\n  }\n\n}\n","<ng-container>\n    <button (click)=\"get500Error()\" class=\"btn btn-outline-primary mr-3\">Test 500 Error</button>\n    <button (click)=\"get400Error()\" class=\"btn btn-outline-primary mr-3\">Test 400 Error</button>\n    <button (click)=\"get401Error()\" class=\"btn btn-outline-primary mr-3\">Test 401 Error</button>\n    <button (click)=\"get404Error()\" class=\"btn btn-outline-primary mr-3\">Test 404 Error</button>\n    <button (click)=\"get400ValidationError()\" class=\"btn btn-outline-primary mr-3\">\n        Test 400 Validation Error</button>\n\n    <div class=\"row mt-5\" *ngIf=\"validationErrors.length > 0\">\n        <ul class=\"text-danger\">\n            <li *ngFor=\"let error of validationErrors\">\n                {{error}}\n            </li>\n        </ul>\n    </div>\n</ng-container>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  registerMode = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  registerToggle() {\n    this.registerMode = !this.registerMode;\n  }\n\n  cancelRegisterMode(event: boolean) {\n    this.registerMode = event;\n  }\n\n}\n","<div class=\"container mt-5\">\n    <div *ngIf=\"!registerMode\" style='text-align: center;'>\n        <h1>Find your match</h1>\n        <p class=\"lead\">Come on in to view your matches... all you need to do is sign up!</p>\n        <div class=\"text-center\">\n            <button (click)=\"registerToggle()\" class=\"btn btn-primary btn-lg me-2\">Register</button>\n            <button class=\"btn btn-info btn-lg\">Learn more</button>\n        </div>\n    </div>\n\n    <div *ngIf=\"registerMode\" class=\"container\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-4\">\n                <app-register (cancelRegister)=\"cancelRegisterMode($event)\" ></app-register>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Member } from '../_models/member';\nimport { Pagination } from '../_models/pagination';\nimport { MembersService } from '../_services/members.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  members: Partial<Member[]>;\n  predicate = 'liked';\n  pageNumber = 1;\n  pageSize = 5;\n  pagination: Pagination;\n\n  constructor(private memberService: MembersService) { }\n\n  ngOnInit(): void {\n    this.loadLikes();\n  }\n  \n  loadLikes() {\n    this.memberService.getLikes(this.predicate, this.pageNumber, this.pageSize).subscribe(response => {\n      this.members = response.result;\n      this.pagination = response.pagination;\n    })\n  }\n\n  pageChanged(event: any) {\n    this.pageNumber = event.page;\n    this.loadLikes();\n  }\n\n}\n","<div class=\"text-center mt-3\">\n    <h2>{{predicate === 'liked' ? 'Members I like' : 'Members who like me'}}</h2>\n</div>\n\n<div class=\"container mt-3\">\n    <div class=\"d-flex\">\n        <div class=\"btn-group\" name=\"predicate\">\n            <button class=\"btn btn-primary\" btnRadio=\"liked\" \n                [(ngModel)]=\"predicate\" (click)=\"loadLikes()\">Members I like</button>\n            <button class=\"btn btn-primary\" btnRadio=\"likedBy\" \n                [(ngModel)]=\"predicate\" (click)=\"loadLikes()\">Members who like me</button>\n        </div>\n    </div>\n\n    <div class=\"row mt-3\">\n        <div class=\"col-2\" *ngFor=\"let member of members\">\n            <app-member-card [member]=\"member\"></app-member-card>\n        </div>\n    </div>\n</div>\n\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\n    <pagination \n        [boundaryLinks]=\"true\" \n        [totalItems]=\"pagination.totalItems\"\n        [itemsPerPage]=\"pagination.itemsPerPage\"\n        [(ngModel)]=\"pagination.currentPage\"\n        (pageChanged)=\"pageChanged($event)\"\n        previousText=\"&lsaquo;\" \n        nextText=\"&rsaquo;\" \n        firstText=\"&laquo;\" \n        lastText=\"&raquo;\">\n</pagination>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Member } from 'src/app/_models/member';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { PresenceService } from 'src/app/_services/presence.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css'],\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() member: Member;\n\n  constructor(private memberService: MembersService, private toastr: ToastrService, \n    public presence: PresenceService) { }\n\n  ngOnInit(): void {\n  }\n\n  addLike(member: Member) {\n    this.memberService.addLike(member.username).subscribe(() => {\n      this.toastr.success('You have liked ' + member.knownAs);\n    })\n  }\n\n}\n","<div class=\"card mb-4\">\n    <div class=\"card-img-wrapper\">\n        <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" class=\"card-img-top\">\n        <ul class=\"list-inline member-icons animate text-center\">\n            <li class=\"list-inline-item\"><button routerLink='/members/{{member.username}}' class=\"btn btn-primary\">\n                <i class=\"fa fa-user\"></i></button></li>\n            <li class=\"list-inline-item\"><button (click)=\"addLike(member)\" class=\"btn btn-primary\">\n                <i class=\"fa fa-heart\"></i></button></li>\n            <li class=\"list-inline-item\">\n                <button \n                    routerLink='/members/{{member.username}}' \n                    [queryParams]='{tab: 3}'\n                    class=\"btn btn-primary\">\n                <i class=\"fa fa-envelope\"></i>\n            </button></li>\n        </ul>\n    </div>\n    <div class=\"card-body p-1\">\n        <h6 class=\"card-title text-center mb-1\">\n            <span [class.is-online]=\"(presence.onlineUsers$ | async).includes(member.username)\">\n                <i class=\"fa fa-user mr-2\"></i>\n            </span>\n            \n            {{member.knownAs}}, {{member.age}}\n        </h6>\n        <p class=\"card-text text-muted text-center\">{{member.city}}</p>\n    </div>\n</div>\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Member } from 'src/app/_models/member';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from '@kolkov/ngx-gallery';\nimport { TabDirective, TabsetComponent } from 'ngx-bootstrap/tabs';\nimport { Message } from 'src/app/_models/message';\nimport { MessageService } from 'src/app/_services/message.service';\nimport { PresenceService } from 'src/app/_services/presence.service';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { User } from 'src/app/_models/user';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit, OnDestroy {\n  @ViewChild('memberTabs', {static: true}) memberTabs: TabsetComponent;\n  member: Member;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n  activeTab: TabDirective;\n  messages: Message[] = [];\n  user: User;\n\n  constructor(public presence: PresenceService, private route: ActivatedRoute, \n    private messageService: MessageService, private accountService: AccountService,\n    private router: Router) { \n      this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\n      this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n    }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.member = data.member;\n    })\n\n    this.route.queryParams.subscribe(params => {\n      params.tab ? this.selectTab(params.tab) : this.selectTab(0);\n    })\n\n    this.galleryOptions = [\n      {\n        width: '500px',\n        height: '500px',\n        imagePercent: 100,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n        preview: false\n      }\n    ]\n\n    this.galleryImages = this.getImages();\n  }\n\n  getImages(): NgxGalleryImage[] {\n    const imageUrls = [];\n    for (const photo of this.member.photos) {\n      imageUrls.push({\n        small: photo?.url,\n        medium: photo?.url,\n        big: photo?.url\n      })\n    }\n    return imageUrls;\n  }\n\n  loadMessages() {\n    this.messageService.getMessageThread(this.member.username).subscribe(messages => {\n      this.messages = messages;\n    })\n  }\n\n  selectTab(tabId: number) {\n    this.memberTabs.tabs[tabId].active = true;\n  }\n\n  onTabActivated(data: TabDirective) {\n    this.activeTab = data;\n    if (this.activeTab.heading === 'Messages' && this.messages.length === 0) {\n      this.messageService.createHubConnection(this.user, this.member.username);\n    } else {\n      this.messageService.stopHubConnection();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.messageService.stopHubConnection();\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-4\">\n        <div class=\"card\">\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" \n                class=\"card-img-top img-thumbnail\">\n            <div class=\"card-body\">\n                <div class=\"mb-2\" *ngIf=\"(presence.onlineUsers$ | async).includes(member.username)\" >\n                    <i class=\"fa fa-user-circle text-success\"></i> Online now\n                </div>\n                <div>\n                    <strong>Location:</strong>\n                    <p>{{member.city}}, {{member.country}}</p>\n                </div>\n                <div>\n                    <strong>Age:</strong>\n                    <p>{{member.age}}</p>\n                </div>\n                <div>\n                    <strong>Last Active:</strong>\n                    <p>{{member.lastActive | timeago}}</p>\n                </div>\n                <div>\n                    <strong>Member since:</strong>\n                    <p>{{member.created | date: 'dd MMM yyyy'}}</p>\n                </div>\n            </div>\n            <div class=\"card-footer\">\n                <div class=\"btn-group d-flex\">\n                    <button class=\"btn btn-primary\">Like</button>\n                    <button (click)=\"selectTab(3)\" class=\"btn btn-success\">Message</button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-8\">\n        <tabset class=\"member-tabset\" #memberTabs>\n            <tab heading='About {{member.knownAs}}' (selectTab)=\"onTabActivated($event)\">\n                <h4>Description</h4>\n                <p>{{member.introduction}}</p>\n                <h4>Looking for</h4>\n                <p>{{member.lookingFor}}</p>\n            </tab>\n            <tab heading='Interests' (selectTab)=\"onTabActivated($event)\">\n                <h4>Interests</h4>\n                <p>{{member.interests}}</p>\n            </tab>\n            <tab heading='Photos' (selectTab)=\"onTabActivated($event)\">\n                <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\" \n                    style=\"display: inline-block; margin-bottom: 20px;\"></ngx-gallery>\n            </tab>\n            <tab heading='Messages' (selectTab)=\"onTabActivated($event)\">\n                <app-member-messages [username]=\"member.username\"></app-member-messages>\n            </tab>\n        </tabset>\n    </div>\n</div>\n","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { Member } from 'src/app/_models/member';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { take } from 'rxjs/operators';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild('editForm') editForm: NgForm;\n  member: Member;\n  user: User;\n  @HostListener('window:beforeunload', ['$event']) unloadNotification($event: any) {\n    if (this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n\n  constructor(private accountService: AccountService, private memberService: MembersService, \n    private toastr: ToastrService) { \n      this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\n  }\n\n  ngOnInit(): void {\n    this.loadMember();\n  }\n\n  loadMember() {\n    this.memberService.getMember(this.user.username).subscribe(member => {\n      this.member = member;\n    })\n  }\n\n  updateMember() {\n    this.memberService.updateMember(this.member).subscribe(() => {\n      this.toastr.success('Profile updated successfully');\n      this.editForm.reset(this.member);\n    })\n  }\n}\n","<div class=\"row\" *ngIf=\"member\">\n    <div class=\"col-4\">\n        <h1>Your profile</h1>\n    </div>\n    <div class=\"col-8\">\n        <div class=\"alert alert-info\" *ngIf=\"editForm.dirty\">\n            <strong>Information: </strong> You have made changes.  Any unsaved changes will be lost\n        </div>\n    </div>\n    <div class=\"col-4\">\n        <div class=\"card\">\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" \n                class=\"card-img-top img-thumbnail\">\n            <div class=\"card-body\">\n                <div>\n                    <strong>Location:</strong>\n                    <p>{{member.city}}, {{member.country}}</p>\n                </div>\n                <div>\n                    <strong>Age:</strong>\n                    <p>{{member.age}}</p>\n                </div>\n                <div>\n                    <strong>Last Active:</strong>\n                    <p>{{member.lastActive | timeago}}</p>\n                </div>\n                <div>\n                    <strong>Member since:</strong>\n                    <p>{{member.created | date: 'dd MMM yyyy'}}</p>\n                </div>\n            </div>\n            <div class=\"card-footer\">\n                <button [disabled]=\"!editForm.dirty\" form=\"editForm\" type=\"submit\" class=\"btn btn-success btn-block\">Save Changes</button>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-8\">\n        <tabset class=\"member-tabset\">\n            <tab heading='About {{member.knownAs}}'>\n                <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateMember()\">\n                    <h4>Description</h4>\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.introduction\" name=\"introduction\" rows=\"6\"></textarea>\n                    <h4 class=\"mt-2\">Looking for</h4>\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.lookingFor\" name=\"lookingFor\" rows=\"6\"></textarea>\n                    <h4 class=\"mt-2\">Interests</h4>\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.interests\" name=\"interests\" rows=\"6\"></textarea>\n                    <h4 class=\"mt-2\">Location Details: </h4>\n                    <div class=\"form-inline\">\n                        <label for=\"city\">City: </label>\n                        <input [(ngModel)]=\"member.city\" type=\"text\" name=\"city\" class=\"form-control mx-2\">\n                        <label for=\"city\">Country: </label>\n                        <input [(ngModel)]=\"member.country\" type=\"text\" name=\"country\" class=\"form-control mx-2\">\n                    </div>\n                </form>\n               \n            </tab>\n            <tab heading='Edit Photos'>\n                <app-photo-editor [member]=\"member\"></app-photo-editor>\n            </tab>\n        </tabset>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Member } from 'src/app/_models/member';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { Observable } from 'rxjs';\nimport { Pagination } from 'src/app/_models/pagination';\nimport { UserParams } from 'src/app/_models/userParams';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { take } from 'rxjs/operators';\nimport { User } from 'src/app/_models/user';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n  members: Member[];\n  pagination: Pagination;\n  userParams: UserParams;\n  user: User;\n  genderList = [{ value: 'male', display: 'Males' }, { value: 'female', display: 'Females' }];\n\n  constructor(private memberService: MembersService) {\n    this.userParams = this.memberService.getUserParams();\n  }\n\n  ngOnInit(): void {\n    this.loadMembers();\n  }\n\n  loadMembers() {\n    this.memberService.setUserParams(this.userParams);\n    this.memberService.getMembers(this.userParams).subscribe(response => {\n      this.members = response.result;\n      this.pagination = response.pagination;\n    })\n  }\n\n  resetFilters() {\n    this.userParams = this.memberService.resetUserParams();\n    this.loadMembers();\n  }\n\n  pageChanged(event: any) {\n    this.userParams.pageNumber = event.page;\n    this.memberService.setUserParams(this.userParams);\n    this.loadMembers();\n  }\n}\n","<div class=\"text-center mt-3\">\n    <h2>Your matches - {{pagination?.totalItems}} found</h2>\n</div>\n\n<div class=\"container mt-3\">\n    <form #form=\"ngForm\" class=\"d-flex mb-3\" (ngSubmit)=\"loadMembers()\" autocomplete=\"off\">\n        <div class=\"d-flex mx-2\">\n            <label class=\"col-form-label me-2\">Age from: </label>\n            <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px;\" name=\"minAge\" \n                [(ngModel)]=\"userParams.minAge\">\n        </div>\n\n        <div class=\"d-flex px-2\">\n            <label class=\"col-form-label me-2\">Age to: </label>\n            <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px;\" name=\"maxAge\" \n                [(ngModel)]=\"userParams.maxAge\">\n        </div>\n\n        <div class=\"d-flex px-2\">\n            <label class=\"col-form-label me-2\">Show: </label>\n            <select name=\"gender\" style=\"width: 130px\" [(ngModel)]=\"userParams.gender\" class=\"form-control ml-1\">\n                <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\n                    {{gender.display}}\n                </option>\n            </select>\n        </div>\n\n        <button class=\"btn btn-primary ms-1\" type=\"submit\">Apply Filters</button>\n        <button (click)=\"resetFilters()\" class=\"btn btn-info ms-1\" type=\"submit\">Reset Filters</button>\n        <div class=\"col\">\n            <div class=\"btn-group float-end\">\n                <button \n                    type=\"button\"\n                    class=\"btn btn-primary\" \n                    name='orderBy' \n                    (click)=\"loadMembers()\"\n                    btnRadio='lastActive'\n                    [(ngModel)]=\"userParams.orderBy\">Last Active</button>\n    \n                <button \n                    type=\"button\"\n                    class=\"btn btn-primary\" \n                    name='orderBy' \n                    (click)=\"loadMembers()\"\n                    btnRadio='created'\n                    [(ngModel)]=\"userParams.orderBy\">Newest Members</button>\n            </div>\n        </div>\n        \n\n    </form>\n</div>\n\n<div class=\"row\">\n    <div *ngFor=\"let member of members\" class=\"col-2\">\n        <app-member-card [member]=\"member\"></app-member-card>\n    </div>\n</div>\n\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\n    <pagination \n        [boundaryLinks]=\"true\" \n        [totalItems]=\"pagination.totalItems\"\n        [itemsPerPage]=\"pagination.itemsPerPage\"\n        [(ngModel)]=\"pagination.currentPage\"\n        (pageChanged)=\"pageChanged($event)\"\n        [maxSize]=\"10\"\n        previousText=\"&lsaquo;\" \n        nextText=\"&rsaquo;\" \n        firstText=\"&laquo;\" \n        lastText=\"&raquo;\">\n</pagination>\n</div>","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Message } from 'src/app/_models/message';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { MessageService } from 'src/app/_services/message.service';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n  @ViewChild('messageForm') messageForm: NgForm;\n  @Input() messages: Message[];\n  @Input() username: string;\n  messageContent: string;\n  loading = false;\n\n  constructor(public messageService: MessageService) { }\n\n  ngOnInit(): void {\n  }\n\n  sendMessage() {\n    this.loading = true;\n    this.messageService.sendMessage(this.username, this.messageContent).then(() => {\n      this.messageForm.reset();\n    }).finally(() => this.loading = false);\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"card-body\"\n        #scrollMe\n        style=\"overflow: scroll; height: 535px;\"\n        [scrollTop]=\"scrollMe.scrollHeight\"\n    >\n        <div *ngIf=\"(messageService.messageThread$ | async)?.length === 0\">\n            No messages yet... say hi by using the message box below\n        </div>\n\n        <ul \n            *ngIf=\"(messageService.messageThread$ | async).length > 0\" \n            class=\"chat\">\n            <li *ngFor=\"let message of (messageService.messageThread$ | async)\">\n                <div>\n                    <span class=\"chat-img float-end\">\n                        <img class=\"rounded-circle\" src=\"{{message.senderPhotoUrl || './assets/user.png'}}\" \n                            alt=\"{{message.senderUsername}}\">\n                    </span>\n                    <div class=\"chat-body\">\n                        <div class=\"header\">\n                            <small class=\"text-muted\">\n                                <span class=\"fa fa-clock-o\">{{message.messageSent | timeago}}</span>\n                                <span class=\"text-danger\" *ngIf=\"!message.dateRead \n                                    && message.senderUsername !== username\">\n                                    (unread)\n                                </span>\n                                <span class=\"text-success\" *ngIf=\"message.dateRead \n                                    && message.senderUsername !== username\">\n                                    (read {{message.dateRead | timeago}})\n                                </span>\n                            </small>\n                        </div>\n                        <p>{{message.content}}</p>\n                    </div>\n                </div>\n            </li>\n        </ul>\n    </div>\n\n    <div class=\"card-footer\">\n        <form #messageForm=\"ngForm\" (ngSubmit)=\"sendMessage()\" autocomplete=\"off\">\n            <div class=\"input-group\">\n                <input \n                    name=\"messageContent\"\n                    required\n                    [(ngModel)]=\"messageContent\"\n                    type=\"text\" \n                    class=\"form-control input-sm\" \n                    placeholder=\"Send a private message\">\n                <div class=\"input-group-append\">\n                    <button [disabled]=\"!messageForm.valid || loading\" class=\"btn btn-primary\" type=\"submit\">Send\n                        <i *ngIf=\"loading\" class=\"fa fa-spinner fa-spin\"></i>\n                    </button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Member } from 'src/app/_models/member';\nimport { FileUploader } from 'ng2-file-upload';\nimport { environment } from 'src/environments/environment';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { User } from 'src/app/_models/user';\nimport { take } from 'rxjs/operators';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { Photo } from 'src/app/_models/photo';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() member: Member;\n  uploader: FileUploader;\n  hasBaseDropzoneOver = false;\n  baseUrl = environment.apiUrl;\n  user: User;\n\n  constructor(private accountService: AccountService, private memberService: MembersService) { \n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\n  }\n\n  ngOnInit(): void {\n    this.initializeUploader();\n  }\n\n  fileOverBase(e: any) {\n    this.hasBaseDropzoneOver = e;\n  }\n\n  setMainPhoto(photo: Photo) {\n    this.memberService.setMainPhoto(photo.id).subscribe(() => {\n      this.user.photoUrl = photo.url;\n      this.accountService.setCurrentUser(this.user);\n      this.member.photoUrl = photo.url;\n      this.member.photos.forEach(p => {\n        if (p.isMain) p.isMain = false;\n        if (p.id === photo.id) p.isMain = true;\n      })\n    })\n  } \n\n  deletePhoto(photoId: number) {\n    this.memberService.deletePhoto(photoId).subscribe(() => {\n      this.member.photos = this.member.photos.filter(x => x.id !== photoId);\n    })\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url: this.baseUrl + 'users/add-photo',\n      authToken: 'Bearer ' + this.user.token,\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n\n    this.uploader.onAfterAddingFile = (file) => {\n      file.withCredentials = false;\n    }\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        const photo: Photo = JSON.parse(response);\n        this.member.photos.push(photo);\n         if (photo.isMain) {\n           this.user.photoUrl = photo.url;\n           this.member.photoUrl = photo.url;\n           this.accountService.setCurrentUser(this.user);\n         }\n      }\n    }\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-2 d-flex flex-column\" *ngFor=\"let photo of member.photos\">\n        <img src=\"{{photo.url}}\" alt=\"{{photo.url}}\" class=\"img-thumbnail p-1\">\n        <div class=\"d-flex\">\n            <button \n                [disabled]=\"photo.isMain\"\n                (click)=\"setMainPhoto(photo)\"\n                [ngClass]='photo.isMain ? \"btn-success active\" : \"btn-outline-success\"'\n                class=\"btn btn-sm flex-grow-1\"\n            >Main</button>\n            <button \n                [disabled]=\"photo.isMain\"\n                (click)=\"deletePhoto(photo.id)\"\n                class=\"btn btn-sm btn-danger flex-grow-1\"\n            ><i class=\"fa fa-trash\"></i></button>\n        </div>\n    </div>\n</div>\n\n<div class=\"row mt-3\">\n \n    <div class=\"col-md-3\">\n\n        <h3>Add Photos</h3>\n\n        <div ng2FileDrop\n             [ngClass]=\"{'nv-file-over': hasBaseDropzoneOver}\"\n             (fileOver)=\"fileOverBase($event)\"\n             [uploader]=\"uploader\"\n             class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\n             <i class=\"fa fa-upload fa-3x\"></i>\n            Drop photos here\n        </div>\n\n        Multiple\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple  /><br/>\n\n        Single\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n    </div>\n\n    <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\n\n        <h3>Upload queue</h3>\n        <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n        <table class=\"table\">\n            <thead>\n            <tr>\n                <th width=\"50%\">Name</th>\n                <th>Size</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let item of uploader.queue\">\n                <td><strong>{{ item?.file?.name }}</strong></td>\n                <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n            </tr>\n            </tbody>\n        </table>\n\n        <div>\n            <div>\n                Queue progress:\n                <div class=\"progress\" style=\"\">\n                    <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n                </div>\n            </div>\n            <button type=\"button\" class=\"btn btn-success btn-s\"\n                    (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n                <span class=\"fa fa-upload\"></span> Upload all\n            </button>\n            <button type=\"button\" class=\"btn btn-warning btn-s\"\n                    (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\n                <span class=\"fa fa-ban\"></span> Cancel all\n            </button>\n            <button type=\"button\" class=\"btn btn-danger btn-s\"\n                    (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\n                <span class=\"fa fa-trash\"></span> Remove all\n            </button>\n        </div>\n\n    </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Message } from '../_models/message';\nimport { Pagination } from '../_models/pagination';\nimport { ConfirmService } from '../_services/confirm.service';\nimport { MessageService } from '../_services/message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[] = [];\n  pagination: Pagination;\n  container = 'Unread';\n  pageNumber = 1;\n  pageSize = 5;\n  loading = false;\n\n  constructor(private messageService: MessageService, private confirmService: ConfirmService) { }\n\n  ngOnInit(): void {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    this.loading = true;\n    this.messageService.getMessages(this.pageNumber, this.pageSize, this.container).subscribe(response => {\n      this.messages = response.result;\n      this.pagination = response.pagination;\n      this.loading = false;\n    })\n  }\n\n  deleteMessage(id: number) {\n    this.confirmService.confirm('Confirm delete message', 'This cannot be undone').subscribe(result => {\n      if (result) {\n        this.messageService.deleteMessage(id).subscribe(() => {\n          this.messages.splice(this.messages.findIndex(m => m.id === id), 1);\n        })\n      }\n    })\n\n  }\n\n  pageChanged(event: any) {\n    if (this.pageNumber !== event.page) {\n      this.pageNumber = event.page;\n      this.loadMessages();\n    }\n  }\n}\n","<div class=\"d-flex mb-4\">\n    <div class=\"btn-group\" name='container'>\n        <button class=\"btn btn-primary\" btnRadio='Unread' [(ngModel)]=\"container\" \n            (click)=\"loadMessages()\">\n            <i class=\"fa fa-envelope\"></i> Unread\n        </button>\n        <button class=\"btn btn-primary\" btnRadio='Inbox' [(ngModel)]=\"container\" \n            (click)=\"loadMessages()\">\n            <i class=\"fa fa-envelope-open\"></i> Inbox\n        </button>\n        <button class=\"btn btn-primary\" btnRadio='Outbox' [(ngModel)]=\"container\" \n            (click)=\"loadMessages()\">\n            <i class=\"fa fa-paper-plane\"></i> Outbox\n        </button>\n    </div>\n</div>\n\n<div class=\"row\" *ngIf=\"messages?.length === 0\">\n    <h3>No messages</h3>\n</div>\n\n<div class=\"row\" *ngIf=\"messages?.length > 0\">\n    <table class=\"table table-hover\" style=\"cursor: pointer\">\n        <thead>\n            <tr>\n                <th style=\"width: 40%\">Message</th>\n                <th style=\"width: 20%\">From / To</th>\n                <th style=\"width: 20%\">Sent / Received</th>\n                <th style=\"width: 20%\"></th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr [hidden]=\"loading\" *ngFor=\"let message of messages\" \n            routerLink='{{container === \"Outbox\" \n                ? \"/members/\" + message.recipientUsername \n                : \"/members/\" + message.senderUsername}}' [queryParams]='{tab: 3}' >\n            <td>{{message.content}}</td>    \n            <td>\n                <div *ngIf=\"container === 'Outbox'\">\n                    <img \n                        class=\"img-circle rounded-circle me-2\"\n                        src=\"{{message.recipientPhotoUrl || './assets/user.png'}}\" \n                        alt=\"{{message.recipientUsername}}\">\n                    <strong>{{message.recipientUsername | titlecase}}</strong>\n                </div> \n                <div *ngIf=\"container !== 'Outbox'\">\n                    <img \n                        class=\"img-circle rounded-circle me-2\"\n                        src=\"{{message.senderPhotoUrl || './assets/user.png'}}\" \n                        alt=\"{{message.senderUsername}}\">\n                    <strong>{{message.senderUsername | titlecase}}</strong>\n                </div> \n            </td>\n            <td>{{message.messageSent | timeago}}</td>\n            <td>\n                <button (click)=\"$event.stopPropagation()\" (click)=\"deleteMessage(message.id)\" class='btn btn-danger'>Delete</button>\n            </td>\n            </tr>\n        </tbody>\n        \n    </table>\n</div>\n\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination && !loading\">\n    <pagination \n        [boundaryLinks]=\"true\" \n        [totalItems]=\"pagination.totalItems\"\n        [itemsPerPage]=\"pagination.itemsPerPage\"\n        [(ngModel)]=\"pagination.currentPage\"\n        (pageChanged)=\"pageChanged($event)\"\n        [maxSize]=\"10\"\n        previousText=\"&lsaquo;\" \n        nextText=\"&rsaquo;\" \n        firstText=\"&laquo;\" \n        lastText=\"&raquo;\">\n</pagination>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent implements OnInit {\n  title: string;\n  message: string;\n  btnOkText: string;\n  btnCancelText: string;\n  result: boolean;\n\n  constructor(public bsModalRef: BsModalRef) { }\n\n  ngOnInit(): void {\n  }\n\n  confirm() {\n    this.result = true;\n    this.bsModalRef.hide();\n  }\n\n  decline() {\n    this.result = false;\n    this.bsModalRef.hide();\n  }\n\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">{{title}}</h4>\n  </div>\n  <div class=\"modal-body\">\n    <p>{{message}}</p>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"confirm()\">{{btnOkText}}</button>\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">{{btnCancelText}}</button>\n  </div>\n","import { Component, EventEmitter, Input, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { User } from 'src/app/_models/user';\n\n@Component({\n  selector: 'app-roles-modal',\n  templateUrl: './roles-modal.component.html',\n  styleUrls: ['./roles-modal.component.css']\n})\nexport class RolesModalComponent implements OnInit {\n  @Input() updateSelectedRoles = new EventEmitter();\n  user: User;\n  roles: any[]; \n\n  constructor(public bsModalRef: BsModalRef) { }\n\n  ngOnInit(): void {\n  }\n\n  updateRoles() {\n    this.updateSelectedRoles.emit(this.roles);\n    this.bsModalRef.hide();\n  }\n\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">Edit roles for {{user.username}}</h4>\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <form #rolesForm=\"ngForm\" id=\"rolesForm\">\n        <div class=\"form-check\" *ngFor=\"let role of roles\">\n            <input type=\"checkbox\"\n                class=\"form-check-input\"\n                [checked]=\"role.checked\"\n                value=\"role.name\"\n                (change)=\"role.checked = !role.checked\"\n                [disabled]=\"role.name === 'Admin' && user.username === 'admin'\"\n            >\n            <label>{{role.name}}</label>\n        </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"updateRoles()\">Submit</button>\n  </div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from '../_services/account.service';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  model: any = {}\n\n  constructor(public accountService: AccountService, private router: Router, \n    private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  login() {\n    this.accountService.login(this.model).subscribe(response => {\n      this.router.navigateByUrl('/members');\n    })\n  }\n\n  logout() {\n    this.accountService.logout();\n    this.router.navigateByUrl('/')\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-primary\">\n    <div class=\"container\">\n        <a class=\"navbar-brand\" routerLink='/' routerLinkActive='active'>Dating App</a>\n\n        <ul class=\"navbar-nav me-auto\">\n            <ng-container *ngIf=\"accountService.currentUser$ | async\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLink='/members' routerLinkActive='active' >Matches</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLink='/lists' routerLinkActive='active'>Lists</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLink='/messages'routerLinkActive='active' >Messages</a>\n                </li>\n                <li *appHasRole='[\"Admin\", \"Moderator\"]' class=\"nav-item\">\n                    <a class=\"nav-link\" routerLink='/admin'routerLinkActive='active' >Admin</a>\n                </li>\n            </ng-container>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink='/errors'routerLinkActive='active' >Errors</a>\n            </li>\n        </ul>\n\n        <div class=\"dropdown\" *ngIf=\"(accountService.currentUser$ | async) as user\" dropdown>\n            <img src=\"{{user.photoUrl || './assets/user.png'}}\" alt=\"{{user.username}}\">\n            <a class=\"dropdown-toggle text-light ms-2 text-decoration-none\" dropdownToggle>Welcome {{user.knownAs || user.username | titlecase}}</a>\n            <div class=\"dropdown-menu mt-3\" *dropdownMenu>\n                <a routerLink='/member/edit' class=\"dropdown-item\">Edit Profile</a>\n                <div class=\"dropdown-divider\"></div>\n                <a class=\"dropdown-item\" (click)=\"logout()\" >Logout</a>\n            </div>\n        </div>\n\n        <form *ngIf=\"(accountService.currentUser$ | async) === null\" #loginForm=\"ngForm\" class=\"d-flex mt-2 mt-md-0\" (ngSubmit)=\"login()\" \n            autocomplete=\"off\">\n            <input \n                name=\"username\"\n                [(ngModel)]=\"model.username\"\n                class=\"form-control me-sm-2\" \n                type=\"text\" \n                placeholder=\"Username\">\n            <input \n                name=\"password\"\n                [(ngModel)]=\"model.password\"\n                class=\"form-control me-sm-2\" \n                type=\"password\" \n                placeholder=\"Password\">\n            <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Login</button>\n        </form>\n    </div>\n\n</nav>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AccountService } from '../_services/account.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  @Output() cancelRegister = new EventEmitter();\n  registerForm: FormGroup;\n  maxDate: Date;\n  validationErrors: string[] = [];\n\n  constructor(private accountService: AccountService, private toastr: ToastrService, \n    private fb: FormBuilder, private router: Router) { }\n\n  ngOnInit(): void {\n    this.intitializeForm();\n    this.maxDate = new Date();\n    this.maxDate.setFullYear(this.maxDate.getFullYear() -18);\n  }\n\n  intitializeForm() {\n    this.registerForm = this.fb.group({\n      gender: ['male'],\n      username: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      dateOfBirth: ['', Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      password: ['', [Validators.required, \n        Validators.minLength(4), Validators.maxLength(8)]],\n      confirmPassword: ['', [Validators.required, this.matchValues('password')]]\n    })\n  }\n\n  matchValues(matchTo: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      return control?.value === control?.parent?.controls[matchTo].value \n        ? null : {isMatching: true}\n    }\n  }\n\n  register() {\n    this.accountService.register(this.registerForm.value).subscribe(response => {\n      this.router.navigateByUrl('/members');\n    }, error => {\n      this.validationErrors = error;\n    })\n  }\n\n  cancel() {\n    this.cancelRegister.emit(false);\n  }\n\n}\n","<form [formGroup]='registerForm' (ngSubmit)=\"registerForm.valid && register()\" autocomplete=\"off\">\n    <h2 class=\"text-center text-primary\">Sign up</h2>\n    <hr>\n\n    <div class=\"mb-3\">\n        <label style=\"margin-right: 10px;\">I am a: </label>\n        <label class=\"form-check-label\">\n            <input class=\"form-check-input\" type=\"radio\" value='male' formControlName='gender'> Male\n        </label>\n        <label class=\"form-check-label\">\n            <input type=\"radio\" value='female' formControlName='gender' class=\"form-check-input ms-3\"> Female\n        </label>\n    </div>\n\n    <app-text-input [formControl]='registerForm.controls[\"username\"]' \n        [label]='\"Username\"'></app-text-input>\n    <app-text-input [formControl]='registerForm.controls[\"knownAs\"]' \n        [label]='\"Known As\"'></app-text-input>\n    <app-date-input [formControl]='registerForm.controls[\"dateOfBirth\"]' \n        [label]='\"Date Of Birth\"' [maxDate]='maxDate'></app-date-input>\n    <app-text-input [formControl]='registerForm.controls[\"city\"]' \n        [label]='\"City\"'></app-text-input>\n    <app-text-input [formControl]='registerForm.controls[\"country\"]' \n        [label]='\"Country\"'></app-text-input>\n    <app-text-input [formControl]='registerForm.controls[\"password\"]' \n        [label]='\"Password\"' [type]='\"password\"'>\n    </app-text-input>\n    <app-text-input [formControl]='registerForm.controls[\"confirmPassword\"]' \n        [label]='\"Confirm Password\"'\n        [type]='\"password\"'></app-text-input>\n\n    <div class=\"row\" *ngIf=\"validationErrors.length > 0\">\n        <ul class=\"text-danger\">\n            <li *ngFor=\"let error of validationErrors\">\n                {{error}}\n            </li>\n        </ul>\n    </div>\n\n    <div class=\"form-group text-center\">\n        <button [disabled]='!registerForm.valid' class=\"btn btn-success mr-2\" type=\"submit\">Register</button>\n        <button class=\"btn btn-default mr-2\" (click)=\"cancel()\" type=\"button\">Cancel</button>\n    </div>\n</form>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'https://localhost:44388/DatingApp/',\n  hubUrl: 'https://localhost:44388/hubs/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}